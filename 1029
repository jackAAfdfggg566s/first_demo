使用Java的QuickFIX库解析FIX协议消息可以通过实现相应的回调方法来完成。以下是一个示例，展示如何解析收到的FIX消息。

1. 配置文件
确保你有一个配置文件config.cfg，内容与之前的示例相同。

2. 创建应用程序
下面的Java程序实现了Application接口，并重写了onMessage方法以解析接收到的FIX消息：

java
复制代码
import quickfix.Application;
import quickfix.Message;
import quickfix.SessionID;
import quickfix.field.ClOrdID;
import quickfix.field.OrdType;
import quickfix.field.Symbol;
import quickfix.field.Side;
import quickfix.field.Price;
import quickfix.Session;
import quickfix.SessionSettings;
import quickfix.SocketInitiator;
import quickfix.file.FileStore;
import quickfix.file.FileLog;

public class QuickFIXExample implements Application {

    public void onCreate(SessionID sessionId) {
        System.out.println("Session created: " + sessionId);
    }

    public void onLogon(SessionID sessionId) {
        System.out.println("Logon: " + sessionId);
    }

    public void onLogout(SessionID sessionId) {
        System.out.println("Logout: " + sessionId);
    }

    @Override
    public void toAdmin(Message message, SessionID sessionId) {
        // 发送管理消息时的处理
    }

    @Override
    public void fromAdmin(Message message, SessionID sessionId) {
        // 接收管理消息时的处理
    }

    @Override
    public void toApp(Message message, SessionID sessionId) {
        // 发送应用消息时的处理
    }

    @Override
    public void fromApp(Message message, SessionID sessionId) {
        try {
            // 解析收到的FIX消息
            System.out.println("Received message: " + message);
            if (message.isSetField(OrdType.TAG)) {
                OrdType ordType = new OrdType();
                message.getField(ordType);
                System.out.println("Order Type: " + ordType.getValue());
            }
            if (message.isSetField(Symbol.TAG)) {
                Symbol symbol = new Symbol();
                message.getField(symbol);
                System.out.println("Symbol: " + symbol.getValue());
            }
            if (message.isSetField(Price.TAG)) {
                Price price = new Price();
                message.getField(price);
                System.out.println("Price: " + price.getValue());
            }
            if (message.isSetField(Side.TAG)) {
                Side side = new Side();
                message.getField(side);
                System.out.println("Side: " + side.getValue());
            }
            if (message.isSetField(ClOrdID.TAG)) {
                ClOrdID clOrdID = new ClOrdID();
                message.getField(clOrdID);
                System.out.println("ClOrdID: " + clOrdID.getValue());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        try {
            SessionSettings settings = new SessionSettings("config.cfg");
            FileStore store = new FileStore(settings);
            FileLog log = new FileLog(settings);
            SocketInitiator initiator = new SocketInitiator(new QuickFIXExample(), store, settings, log);
            initiator.start();

            // 保持程序运行
            Thread.sleep(Long.MAX_VALUE);

            initiator.stop();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
3. 运行示例
确保你的环境中已安装Java和Maven。
编译并运行这个应用程序。
4. 发送测试消息
可以使用FIX测试工具（如FIX Simulator）向你的QuickFIX应用程序发送测试消息，以观察解析输出。

参考文档
你可以查看QuickFIX文档获取更多信息和详细示例。