要通过 kubectl 命令和 AWS CloudWatch Container Insights 创建自定义仪表板，可以按照以下步骤操作：

步骤 1：确保启用 Container Insights
确保您的 EKS 集群已启用 CloudWatch Container Insights。您可以通过 AWS 管理控制台或使用 eksctl 命令来启用。

步骤 2：使用 kubectl 获取所需数据
您可以使用 kubectl 命令从 Kubernetes 集群中提取必要的数据。以下是一些常见命令示例：

获取所有 Pods 的信息：

bash
复制代码
kubectl get pods --all-namespaces -o wide
获取特定命名空间下的 Pods：

bash
复制代码
kubectl get pods -n <namespace> -o wide
获取某个 Pod 的详细信息：

bash
复制代码
kubectl describe pod <pod-name> -n <namespace>
步骤 3：使用 CloudWatch Metrics
CloudWatch Container Insights 会自动收集容器和节点的指标。可以使用 AWS CLI 来查询这些指标。以下是一个示例：

bash
复制代码
aws cloudwatch get-metric-data --metric-name CPUUtilization --namespace "ContainerInsights" --start-time <start-time> --end-time <end-time> --period 300 --statistics Average
步骤 4：创建自定义仪表板
您可以使用 CloudWatch 控制台手动创建仪表板，或者使用 AWS CLI 自动创建。

使用 AWS CLI 创建仪表板的示例
bash
复制代码
aws cloudwatch put-dashboard --dashboard-name "MyCustomDashboard" --dashboard-body '{
  "widgets": [
    {
      "type": "metric",
      "x": 0,
      "y": 0,
      "width": 24,
      "height": 12,
      "properties": {
        "metrics": [
          [ "ContainerInsights", "CPUUtilization", "ClusterName", "<your-cluster-name>", "Namespace", "<namespace>" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "<your-region>",
        "period": 300,
        "title": "CPU Utilization"
      }
    }
  ]
}'
步骤 5：通过 kubectl 和 AWS CLI 脚本自动化
您可以编写一个 Bash 脚本，将上述命令结合在一起，以便自动执行。

bash
复制代码
#!/bin/bash

# 设置变量
CLUSTER_NAME="<your-cluster-name>"
NAMESPACE="<namespace>"
REGION="<your-region>"

# 获取 Pods 信息
kubectl get pods -n $NAMESPACE -o wide

# 查询 CloudWatch 指标
aws cloudwatch get-metric-data --metric-name CPUUtilization --namespace "ContainerInsights" --start-time $(date -u -d '1 hour ago' +%Y-%m-%dT%H:%M:%SZ) --end-time $(date -u +%Y-%m-%dT%H:%M:%SZ) --period 300 --statistics Average

# 创建自定义仪表板
aws cloudwatch put-dashboard --dashboard-name "MyCustomDashboard" --dashboard-body '{
  "widgets": [
    {
      "type": "metric",
      "x": 0,
      "y": 0,
      "width": 24,
      "height": 12,
      "properties": {
        "metrics": [
          [ "ContainerInsights", "CPUUtilization", "ClusterName", "'$CLUSTER_NAME'", "Namespace", "'$NAMESPACE'" ]
        ],
        "view": "timeSeries",
        "stacked": false,
        "region": "'$REGION'",
        "period": 300,
        "title": "CPU Utilization"
      }
    }
  ]
}'
注意事项
权限：确保您有适当的 IAM 权限来访问 CloudWatch 和 EKS。
变量替换：替换脚本中的 <your-cluster-name>、<namespace> 和 <your-region> 等变量为实际值。
可视化：可以根据需求添加更多的小部件来扩展仪表板。
通过这些步骤，您可以使用 kubectl 和 CloudWatch 创建自定义仪表板，以监控 Kubernetes 集群中的容器。